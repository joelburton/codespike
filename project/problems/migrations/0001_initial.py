# Generated by Django 3.1.4 on 2020-12-05 19:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('notes', models.TextField(blank=True, help_text='These are never shown to students.', verbose_name='Staff notes')),
                ('status', model_utils.fields.StatusField(choices=[('private', 'Private'), ('published', 'Published'), ('retired', 'Retired')], db_index=True, default='private', help_text='Hidden from students when private (visible, but not listed, when retired).', max_length=100, no_check_for_status=True)),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.SlugField(max_length=25, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('code', models.TextField(blank=True)),
                ('solution', models.TextField(blank=True)),
                ('explanation', models.TextField(blank=True)),
                ('difficulty', models.PositiveSmallIntegerField(blank=True, help_text='From 1 to 10, where bigger is harder.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('dri', models.CharField(blank=True, max_length=25)),
                ('source', models.CharField(blank=True, help_text='Credit for source of problem.', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='These are never shown to students.', verbose_name='Staff notes')),
                ('status', model_utils.fields.StatusField(choices=[('private', 'Private'), ('published', 'Published'), ('retired', 'Retired')], db_index=True, default='private', help_text='Hidden from students when private (visible, but not listed, when retired).', max_length=100, no_check_for_status=True)),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('output-eq', 'Output equals'), ('output-regex', 'Output matches regex'), ('return-match-json', 'Returns (tested with JSON)'), ('jasmine', 'Jasmine test')], max_length=25)),
                ('test', models.TextField()),
                ('shown', models.BooleanField(default=True, help_text='Is this test shown to students?', verbose_name='Show to students?')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
